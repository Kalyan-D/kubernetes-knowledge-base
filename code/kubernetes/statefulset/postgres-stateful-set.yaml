# Secret to store db creds
apiVersion: v1
kind: Secret
metadata:
  name   : pg-creds
  namespace: dev
data:
  password: bXlzZWNyZXRwYXNzd29yZA==
---
# creating a postgres db deployment manifest
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: dev
  labels:
    tier: db
spec:
  template:
    metadata:
      name: postgres
      labels:
        tier: db
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                # get envs from secrets
                secretKeyRef:
                  name: pg-creds
                  key: password
          volumeMounts:
            - name: pg-vol
              mountPath: /var/lib/postgresql
          readinessProbe:
            exec:
              command: ["psql", "-U", "postgres", "-d", "postgres", "-c", "SELECT 1"]
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 8
          resources:
            requests:
              memory: 200Mi
              cpu: 100m
            limits:
              memory: 500Mi
              cpu: 500m
      volumes:
        - name: pg-vol
          hostPath:
            path: /postgres/vol
            type: DirectoryOrCreate
  replicas: 3
  serviceName: "postgres"
  selector:
    matchLabels:
       tier: db

---
# creating a service to expose the deployment
apiVersion: v1
kind: Service
metadata:
  namespace: dev
  name: pg-service
  labels:
    type: database-service
spec:
  type: LoadBalancer
  ports:
    - port: 5432 #service port
      targetPort: 5432 #conatiner port
  selector:
    tier: db
